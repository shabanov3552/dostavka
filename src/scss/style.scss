@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин

// Подключить если есть локальные файлы шрифтов
@import "fonts/fonts";

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
//@import "fonts/icons";

// ============================================================================================================================================================================================================================================================================================================================================================================================
// Настройки шаблона ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Палитра цветов
@import "base/variables";
// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: var(--font-family);
$fontSize: rem(18); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: var(--light-whit); // Цвет шрифта по умолчанию


// Настройки адаптивной сетки ===============================================================================================================================================================================================================================================================================================

// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1680;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 120;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth);

// $laptopL: em(1439.98);
$xxl: em(1399.98);

// $laptop: em(1280.98);
$xl: em(1199.98);

// $tablet: em(991.98);
$lg: em(991.98);

// $mobile: em(767.98);
$md: em(767.98);

// $mobileMiddle: em(578.98);
$sm: em(576.98);

// $mobileSmall: em(479.98);
$xs: em(479.98);

// $mobileMini: em(374.98);
$xxs: em(374.98);

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Обнуление ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

// Стили тега BODY ============================================================================================================================================================================================================================================================================================================================================================================================

body {

	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
		overscroll-behavior: none;
	}

	// Сайт загружен
	.loaded & {
		.mp-first-block__truck {
			transition: transform 0.70s cubic-bezier(0.37, -0.01, 0.47, 1) 0s;
			transform: translateX(0px);
		}

		.mp-first-block__title,
		.mp-first-block__offers,
		.mp-first-block__button {
			transition: transform .70s cubic-bezier(0.68, -0.01, 0.56, 0.98) 0.80s;
			transform: translateX(0px);
		}

		.mp-first-block__bg-forest {
			animation: moveForest 3s infinite linear 1.5s;
		}
	}
}

// Оболочка wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	background: var(--dark-gray);
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;

	@supports (overflow: clip) {
		overflow: clip;
	}

	// Прижимаем footer
	>main {
		flex: 1 1 auto;
	}

	// Фикс для слайдеров
	>* {
		min-width: 0;
	}
}

// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {

	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($containerWidth);
			margin: 0 auto;
		}

		@if ($containerPadding>0) {
			@if ($maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));

				@media (max-width:$pc) {
					padding: 0 rem(60);
					@include adaptiveValue("padding-left", 60, 40, 0, 1710, 1199.98);
					@include adaptiveValue("padding-right", 60, 40, 0, 1710, 1199.98);
				}

				@media (max-width:$lg) {
					@include adaptiveValue("padding-left", 40, 16, 0, 991.98, 767.98);
					@include adaptiveValue("padding-right", 40, 16, 0, 991.98, 767.98);
				}
			}

			@else {
				@include adaptiveValue("padding-left", math.div($containerPadding, 2), 15);
				@include adaptiveValue("padding-right", math.div($containerPadding, 2), 15);
			}
		}
	}
}

@else {

	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;

		@if ($maxWidthContainer>0) {
			max-width: rem($containerWidth);
		}

		@else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}

		@media (max-width: $pc) {
			max-width: rem(970);
		}

		@media (max-width: $lg) {
			max-width: rem(750);
		}

		@media (max-width: $md) {
			max-width: none;

			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "home";
@import "news";
@import "services";
@import "cases";